cmake_minimum_required (VERSION 2.6)
project (animorphs)
set(VERSION 0.1)
set(SOVERSION 1.0)

# Following `cmake --help-policy CMP0072`
set(OpenGL_GL_PREFERENCE "GLVND")

# morphologica uses c++-17 language features
set(CMAKE_CXX_STANDARD 17)

# Add the host definition to CXXFLAGS along with other switches, depending on OS/Compiler
if (APPLE)
  set(CMAKE_CXX_FLAGS "${OS_FLAG} -Wall -Wfatal-errors -g -O3")
else()
  # This assumes a gcc compiler (or a gcc mimic like Clang)
  set(CMAKE_CXX_FLAGS "${OS_FLAG} -Wall -Wfatal-errors -g -O3 -Wno-unused-result -Wno-unknown-pragmas -march=native")
endif()

# Tell clang to be quiet about brace initialisers:
if(CMAKE_CXX_COMPILER_ID MATCHES Clang)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-missing-braces")
endif()

# Add OpenMP flags here, if necessary
find_package(OpenMP)
if(OpenMP_FOUND)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
endif()

# Additional GL compiler flags.
#
set(OpenGL_GL_PREFERENCE "GLVND") # Following `cmake --help-policy CMP0072`
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DGL3_PROTOTYPES -DGL_GLEXT_PROTOTYPES")
if(APPLE)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DGL_SILENCE_DEPRECATION")
endif()

# Tell the program where the morph fonts are. Assuming you installed morphologica in /usr/local:
# [uncomment and correct this if any text-rendering features from morphologica get used]
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DMORPH_FONTS_DIR=\"\\\"/usr/local/share/fonts\\\"\"")

# Find the libraries which will be needed
find_package(jsoncpp REQUIRED)
##find_package(HDF5 REQUIRED) # animorphs not currently using HDF5
find_package(Armadillo REQUIRED)
find_package(OpenCV REQUIRED)
find_package(LAPACK REQUIRED)
find_package(OpenGL REQUIRED)
find_package(GLEW REQUIRED)
find_package(glfw3 3.3 REQUIRED)
##find_package(Freetype REQUIRED) # animorphs not currently using any text rendering from morphologica

# Define collections of includes for the dependencies
get_target_property(JSON_INC_PATH jsoncpp_lib INTERFACE_INCLUDE_DIRECTORIES)
set(MORPH_INC_CORE ${JSON_INC_PATH} ${ARMADILLO_INCLUDE_DIR} ${ARMADILLO_INCLUDE_DIRS} ${HDF5_INCLUDE_DIR})
set(MORPH_INC_GL ${OpenCV_INCLUDE_DIRS} ${OPENGL_INCLUDE_DIR} ${GLFW3_INCLUDE_DIR} ${FREETYPE_INCLUDE_DIRS})
include_directories(${MORPH_INC_CORE} ${MORPH_INC_GL})

# Assuming that you installed morphologica in-tree
set(MORPH_INCLUDE_PATH "${PROJECT_SOURCE_DIR}/morphologica" CACHE PATH "The path to morphologica")
include_directories(BEFORE ${MORPH_INCLUDE_PATH}/include) # Allows GL3/gl3.h to be found
include_directories(BEFORE ${MORPH_INCLUDE_PATH})         # Allows morph/Header.h to be found

if(APPLE AND OpenMP_CXX_FOUND)
  # Armadillo uses OpenMP, and on Mac, that means linking the libomp library
  set(ALL_LIBS
    OpenMP::OpenMP_CXX
    OpenGL::GL
    glfw
    ${ARMADILLO_LIBRARY} ${ARMADILLO_LIBRARIES}
    ${LAPACK_LIBRARIES}
    ${OpenCV_LIBS}
    jsoncpp_lib
    )
else()
  set(ALL_LIBS
    OpenGL::GL
    glfw
    ${ARMADILLO_LIBRARY} ${ARMADILLO_LIBRARIES}
    ${LAPACK_LIBRARIES}
    ${OpenCV_LIBS}
    jsoncpp_lib
    )
endif()

#if(USE_GLEW)
  list (APPEND ALL_LIBS ${GLEW_LIBRARIES})
#endif(USE_GLEW)

file(GLOB SOURCES
  src/*.cpp
  src/visual/*.cpp
  src/core/*.cpp
  src/util/*.cpp
  src/collisions/*.cpp
)

file(GLOB HEADERS
  src/*.h
  src/visual/*.h
  src/core/*.h
  src/util/*.h
  src/collisions/*.h
)

add_library(animorphs SHARED ${SOURCES})
# This line suppresses a warning generated by g++ (in error) when compiling stb_image.h:
set_target_properties(animorphs PROPERTIES COMPILE_FLAGS "-Wno-unused-but-set-variable" )

target_include_directories(animorphs PUBLIC
  $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}> # so include "morph/blah.h" works
  $<INSTALL_INTERFACE:include>  # <prefix>/include so that include <morph/blah.h> works
)

# Common links
link_directories(${OpenCV_INCLUDE_DIRS})

target_link_libraries(animorphs ${ALL_LIBS}) # Animat specific links

install(TARGETS animorphs EXPORT AnimorphsConfig LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

# Header installation
install(FILES ${HEADERS} DESTINATION ${CMAKE_INSTALL_PREFIX}/include/animorphs)

add_custom_command( TARGET animorphs POST_BUILD
  COMMAND ${CMAKE_COMMAND} -E copy_directory "${CMAKE_CURRENT_SOURCE_DIR}/shaders"
  "${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/shaders")

# Compile the examples
add_subdirectory(examples)

message("Copying the shaders from")
message("${CMAKE_CURRENT_SOURCE_DIR}/shaders/")
message("to")
message("${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/")
